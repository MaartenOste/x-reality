{"version":3,"sources":["App/components/GlTransmissionFormat/glTF.glb","App/components/Suzanne/suzanne.glb","App/components/Button/index.js","App/components/Lighting/index.js","App/index.js","index.js"],"names":["module","exports","props","useState","setHover","color","setColor","useFrame","onPointerOver","onPointerOut","onClick","onDoubleClick","args","fontSize","position","lightRef","useRef","pos","intensity","castShadow","ref","attach","invalidateFrameloop","shadowMap","enablePan","enableZoom","enableRotate","luminanceThreshold","luminanceSmoothing","height","Lighting","Button","ReactDOM","render","App","document","getElementById"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mKCI5B,WAACC,GAAW,IAAD,EACEC,oBAAS,GADX,mBACVC,GADU,aAEED,mBAAS,OAFX,mBAEjBE,EAFiB,KAEVC,EAFU,KAMxB,OAFAC,aAAS,eAGP,2BACEC,cAAe,kBAAMJ,GAAS,IAC9BK,aAAc,kBAAML,GAAS,IAC7BM,QAAS,kBAAMJ,EAAS,WACxBK,cAAe,kBAAML,EAAS,OAE9B,8BACE,uCAAmBM,KAAc,CAAC,EAAG,GAAK,OAC1C,wCAAoBP,MAAOA,KAE7B,kBAAC,IAAD,CAAMA,MAAM,QAAQQ,SAAU,GAAKC,SAAU,CAAC,EAAG,EAAG,MAApD,eCnBS,G,gBAAA,WACb,IAAMC,EAAWC,mBACXC,EAAM,CAAC,GAAK,GAAK,GAEvB,OACE,oCACE,kCAAcC,UAAW,KACzB,2BAAOJ,SAAUG,GACf,sCACEE,YAAY,EAEZD,UAAW,EACXE,IAAKL,IAEP,0BAAMD,SAAUG,GACd,0CAAsBL,KAAM,CAAC,IAAM,GAAI,IAAKS,OAAO,aACnD,wCAAoBA,OAAO,eAI/B,gCAAYhB,MAAO,SAAUa,UAAW,GAAKJ,SAAU,CAAC,EAAG,EAAG,QCJrD,G,YAAA,WAgBb,OACE,kBAAC,IAAD,CAAQQ,qBAAqB,EAAOC,WAAS,GAC3C,+BAEI,kBAAC,IAAD,CACEC,WAAW,EACXC,YAAY,EACZC,cAAc,KAGjB,GACA,GAEH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,mBAAoB,EAAGC,mBAAoB,GAAKC,OAAQ,OAEjE,kBAACC,EAAD,MACS,kBAACC,EAAD,OACR,GACA,GACA,GACA,GACA,GAMA,KC1DPC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b07d224a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/glTF.ce019e05.glb\";","module.exports = __webpack_public_path__ + \"static/media/suzanne.fdd60495.glb\";","import React, { useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nexport default (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [color, setColor] = useState(0x00ff00);\r\n\r\n  useFrame(() => {});\r\n\r\n  return (\r\n    <group\r\n      onPointerOver={() => setHover(true)}\r\n      onPointerOut={() => setHover(false)}\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n    >\r\n      <mesh>\r\n        <boxBufferGeometry args={hover ? [1, 0.5, 0.01] : [1, 0.5, 0.01]} />\r\n        <meshMatcapMaterial color={color} />\r\n      </mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nexport default () => {\r\n  const lightRef = useRef();\r\n  const pos = [0.5, 0.5, 1];\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <group position={pos}>\r\n        <directionalLight\r\n          castShadow={true}\r\n          // color={0xff0000}\r\n          intensity={1}\r\n          ref={lightRef}\r\n        />\r\n        <mesh position={pos}>\r\n          <sphereBufferGeometry args={[0.01, 32, 32]} attach=\"geometry\" />\r\n          <meshMatcapMaterial attach=\"material\" />\r\n        </mesh>\r\n      </group>\r\n\r\n      <pointLight color={0xff6600} intensity={0.5} position={[0, 0, 0]} />\r\n    </>\r\n  );\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { OrbitControls, Stats } from \"@react-three/drei\";\r\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\n// import io from \"socket.io-client\";\r\nimport {\r\n  Button,\r\n  Clock,\r\n  Cube,\r\n  Gauge,\r\n  GlTransmissionFormat,\r\n  Lighting,\r\n  Suzanne,\r\n  Tripod,\r\n} from \"App/components\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default () => {\r\n  // const port = 3001;\r\n  // const socket = io(`http://localhost:${port}`);\r\n\r\n  // socket.on(\"connect\", () => {\r\n  //   console.log(\"Socket connected: \", socket.connected);\r\n  // });\r\n\r\n  // socket.on(\"disconnect\", () => {\r\n  //   console.log(\"Socket connected: \", socket.connected);\r\n  // });\r\n\r\n  // socket.on(\"telemetry\", (message) => {\r\n  //   console.log(\"Message:\", message);\r\n  // });\r\n\r\n  return (\r\n    <Canvas invalidateFrameloop={false} shadowMap>\r\n      <group>\r\n        {true && (\r\n          <OrbitControls\r\n            enablePan={true}\r\n            enableZoom={true}\r\n            enableRotate={true}\r\n          />\r\n        )}\r\n        {false && <Stats />}\r\n        {false && <gridHelper args={[10, 10, \"red\", \"gray\"]} />}\r\n      </group>\r\n      <EffectComposer>\r\n        <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\r\n      </EffectComposer>\r\n      <Lighting />\r\n      {true && <Button />}\r\n      {false && <Clock />}\r\n      {false && <Cube />}\r\n      {false && <Cube position={[1, 1, 1]} rotation={[0.5, 0.5, 0.5]} />}\r\n      {false && <Gauge position={[0, 0, -1]} />}\r\n      {false && (\r\n        <Suspense fallback={null}>\r\n          <Suzanne />\r\n          <GlTransmissionFormat />\r\n        </Suspense>\r\n      )}\r\n      {false && <Tripod />}\r\n    </Canvas>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}