{"version":3,"sources":["App/components/Animation/animation.glb","App/components/Animation/index.js","App/components/Button/index.js","App/components/Button/Spring.js","App/utils/KeyboardControls/index.js","App/utils/MathCircle/index.js","App/utils/ZeroFill/index.js","App/components/Clock/index.js","App/components/Clock/Digital.js","App/components/Cube/index.js","App/components/Face/index.js","App/components/Gauge/index.js","App/components/Image/UV_Grid_Sm.jpg","App/components/Image/index.js","App/components/Image/arteveldehogeschool_logo.svg","App/components/Image/SVG_logo.svg","App/components/Image/Svg.js","App/components/Lighting/index.js","App/components/Lighting/indexGui.js","App/components/Lighting/Studio.js","App/components/Lighting/StudioGui.js","App/components/Lighting/ThreePoint.js","App/components/Lighting/ThreePointGui.js","App/components/Logo/gltf-logo.glb","App/components/Logo/index.js","App/components/Logo/Double.js","App/lib/FontFamily/index.js","App/lib/MatCap/index.js","App/components/LoremIpsum/index.js","App/components/Normals/normals.glb","App/components/Normals/index.js","App/components/Socket/index.js","App/components/Spring/index.js","App/components/Spring/Props.js","App/components/Suzanne/suzanne.glb","App/components/Suzanne/index.js","App/components/Suzanne/MatcapTexture.js","App/components/Suzanne/NormalTexture.js","App/components/Suzanne/StandardMaterial.js","App/components/Suzanne/ToonMaterial.js","App/components/SvgLoader/Shape.js","App/components/SvgLoader/Group.js","App/components/SvgLoader/index.js","App/components/Tripod/index.js","App/components/World/index.js","App/components/Wouter/index.js","App/components/Wouter/PathRouter.js","App/components/Wouter/PathWouter.js","App/Content.js","App/index.js","index.js"],"names":["useGLTF","animationGlb","animations","scene","animationRef","useRef","mixer","THREE","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","props","useState","setHover","color","setColor","onClick","onDoubleClick","onPointerOut","onPointerOver","args","fontSize","position","hover","toggle","setToggle","colorCurrent","setColorCurrent","useSpring","opacity","scale","rotation","degToRad","group","mesh","meshMatcapMaterial","transparent","AZERTY","LEFT","UP","DIRECTION","QWERTY","KeyboardControls","event","console","log","code","info","window","addEventListener","keyDownHandler","keyUpHandler","removeEventListener","this","radius","degrees","angle","x","Math","cos","y","sin","number","zeros","postfix","string","length","zeroFill","floor","toString","isHour","tick","HAND_SS_COLOR","HAND_THICKNESS","clockRef","handHoursRef","handMinutesRef","handSecondsRef","angleStart","d","Date","z","getHours","getMinutes","getSeconds","Array","fill","map","value","index","MathCircle","CLOCK_SIZE","getCoordinates","receiveShadow","castShadow","HAND_HH_LENGTH","HAND_MM_LENGTH","HAND_SS_LENGTH","radians","HH","ZeroFill","MM","SS","text","colors","random","cubeRef","NEEDLE_STEP","TICK_MARKS","label","angleStep","valueRange","valueStep","needleRef","needleAngle","needleValue","needleStep","forEach","tickMark","children","material","setColorName","metalness","roughness","texture","useTexture","uvGrid","offset","repeat","center","side","SvgLoader","source","logoNl","svgLogo","intensity","penumbra","directionalLightRef","useResource","pointLightRef","spotLightRef","spotLightHelperRef","useThree","target","add","showLightHelpers","useControl","type","ambientLightColor","ambientLightIntensity","min","max","directionalLightColor","directionalLightIntensity","pointLightColor","pointLightIntensity","pointLightPosition","distance","spotLightColor","spotLightIntensity","spotLightPosition","translateX","translateZ","frontLightRef","leftLightRef","rightLightRef","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","backLightRef","fillLightRef","keyLightRef","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","clockwise","setClockwise","gltfLogo","gltfLogoGlb","logoRef","logo1Ref","logo2Ref","clone","GREEN_CRYSTAL","SILVERY","TITANIUM","WORN_GOLD","XS","SM","MD","LG","XL","useMatcapTexture","MatCap","matcapGreenCrystal","matcapSilvery","matcapWornGold","font","FontFamily","matcap","outlineColor","outlineWidth","normals","normalsGlb","normalsRef","distanceRef","speedRef","socket","Manager","on","connected","message","speed","flexDirection","flexWrap","justifyContent","size","config","duration","easing","easings","delay","from","to","wobbly","thetaLength","geometryProps","rotate","setRotate","suzanneGlb","nodes","materials","objectRef","geometry","Suzanne","suzanneRef","useSubdivision","useNormalTexture","anisotropy","normalMap","shape","paths","path","shapes","toShapes","pathIndex","Shape","setPaths","Promise","resolve","SVGLoader","load","data","then","Group","thickness","v","i","MOVE_SPEED","enablePointerLockControls","pointerRef","addEventListeners","getObject","removeEventListeners","moveForward","forwardDirection","moveRight","rightDirection","upDirection","BOX_SIZE","useLocation","setLocation","route","currentLocation","location","hash","replace","useHashLocation","handler","useCallback","enableOrbitControls","showEffect","showStats","useComponent","items","useLighting","showAxesHelper","showGridHelper","showLighting","name","showComponent","base","process","hook","enablePan","enableRotate","enableZoom","height","luminanceThreshold","luminanceSmoothing","Lighting","Button","Clock","Cube","Face","Gauge","Socket","fallback","Animation","Logo","LoremIpsum","Normals","Image","Tripod","World","Wouter","component","WouterPathRouter","WouterPathWouter","invalidateFrameloop","shadowMap","colorManagement","Content","title","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.70759071.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/animation.07175b80.glb\";","import React, { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport animationGlb from \"./animation.glb\";\r\n\r\nexport default () => {\r\n  const { animations, scene } = useGLTF(animationGlb, true);\r\n  const animationRef = useRef();\r\n  const mixer = new THREE.AnimationMixer();\r\n\r\n  useEffect(() => {\r\n    if (animationRef.current) {\r\n      mixer.clipAction(animations[0], animationRef.current).play();\r\n    }\r\n  }, []);\r\n\r\n  useFrame((state, delta) => {\r\n    mixer.update(delta);\r\n  });\r\n\r\n  return <primitive object={scene} ref={animationRef} />;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nexport default (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [color, setColor] = useState(0x00ff00);\r\n\r\n  return (\r\n    <group\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n    >\r\n      <mesh>\r\n        <boxBufferGeometry args={hover ? [1, 0.5, 0.01] : [1, 0.5, 0.01]} />\r\n        <meshMatcapMaterial color={color} />\r\n      </mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"react-spring/three\";\r\n\r\nexport default (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [colorCurrent, setColorCurrent] = useState(0xff0000);\r\n  const { opacity, rotation, scale } = useSpring({\r\n    opacity: hover ? 1 : 0.5,\r\n    scale: hover ? [1.5, 1.25] : [1, 1],\r\n    rotation: toggle ? [THREE.MathUtils.degToRad(-90), 0, 0] : [0, 0, 0],\r\n  });\r\n\r\n  return (\r\n    <animated.group\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      onDoubleClick={() => setColorCurrent(colorCurrent >> 8)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      rotation={rotation}\r\n    >\r\n      <animated.mesh scale={scale}>\r\n        <planeBufferGeometry args={[1, 0.5]} />\r\n        <animated.meshMatcapMaterial\r\n          opacity={opacity}\r\n          color={colorCurrent}\r\n          transparent={true}\r\n        />\r\n      </animated.mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </animated.group>\r\n  );\r\n};\r\n","const AZERTY = {\r\n  LEFT: \"KeyQ\",\r\n  UP: \"KeyZ\",\r\n};\r\nconst DIRECTION = {\r\n  BACK: -1,\r\n  DOWN: -1,\r\n  FORWARD: 1,\r\n  LEFT: -1,\r\n  NONE: 0,\r\n  RIGHT: 1,\r\n  UP: 1,\r\n};\r\nconst QWERTY = {\r\n  LEFT: \"KeyA\",\r\n  UP: \"KeyW\",\r\n};\r\n\r\nclass KeyboardControls {\r\n  static #forwardDirection = DIRECTION.NONE;\r\n  static #keyboard = QWERTY;\r\n  static #rightDirection = DIRECTION.NONE;\r\n  static #upDirection = DIRECTION.NONE;\r\n\r\n  static get forwardDirection() {\r\n    return this.#forwardDirection;\r\n  }\r\n\r\n  static get rightDirection() {\r\n    return this.#rightDirection;\r\n  }\r\n\r\n  static get upDirection() {\r\n    return this.#upDirection;\r\n  }\r\n\r\n  static keyDownHandler(event) {\r\n    console.log(\"KeyboardControls: keyDownHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"KeyS\":\r\n        KeyboardControls.#forwardDirection = DIRECTION.BACK;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.LEFT;\r\n        break;\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n        KeyboardControls.#rightDirection = DIRECTION.RIGHT;\r\n        break;\r\n      case \"ArrowUp\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.FORWARD;\r\n        break;\r\n      case \"KeyF\":\r\n        KeyboardControls.#upDirection = DIRECTION.DOWN;\r\n        break;\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.UP;\r\n        break;\r\n    }\r\n  }\r\n\r\n  static keyUpHandler(event) {\r\n    console.log(\"KeyboardControls: keyUpHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"ArrowUp\":\r\n      case \"KeyS\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"KeyF\":\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.NONE;\r\n        break;\r\n    }\r\n  }\r\n\r\n  static addEventListeners() {\r\n    console.info(\"KeyboardControls: addEventListeners\");\r\n    window.addEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.addEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static removeEventListeners() {\r\n    console.info(\"KeyboardControls: removeEventListeners\");\r\n    window.removeEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.removeEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static setKeyboardAzerty() {\r\n    console.log(this.#keyboard);\r\n    this.#keyboard = AZERTY;\r\n    console.log(this.#keyboard);\r\n  }\r\n\r\n  static setKeyboardQwerty() {\r\n    this.#keyboard = QWERTY;\r\n  }\r\n}\r\n\r\nexport default KeyboardControls;\r\n","import * as THREE from \"three\";\r\n\r\nexport default class {\r\n  #radius = 1;\r\n  #angle = 0;\r\n\r\n  constructor(radius = 1) {\r\n    this.#radius = radius;\r\n  }\r\n\r\n  get angle() {\r\n    return this.#angle;\r\n  }\r\n\r\n  set angle(degrees) {\r\n    this.#angle = THREE.MathUtils.degToRad(degrees);\r\n  }\r\n\r\n  getCoordinates(degrees) {\r\n    this.angle = degrees;\r\n    const x = Math.cos(this.angle) * this.#radius;\r\n    const y = Math.sin(this.angle) * this.#radius;\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n","export default class {\r\n  #number;\r\n  #postfix;\r\n  #zeros;\r\n\r\n  constructor(number = 0, zeros = 0, postfix = \"\") {\r\n    this.number = number;\r\n    this.#postfix = postfix;\r\n    this.#zeros = zeros;\r\n  }\r\n\r\n  get number() {\r\n    return this.zeroFill(this.#number);\r\n  }\r\n\r\n  set number(number) {\r\n    this.#number = Math.floor(number).toString();\r\n  }\r\n\r\n  toString() {\r\n    return this.number + this.#postfix;\r\n  }\r\n\r\n  zeroFill(string) {\r\n    while (string.length < this.#zeros) {\r\n      string = `0${string}`;\r\n    }\r\n    return string;\r\n  }\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { MathCircle } from \"App/utils\";\r\n\r\nfunction isHour(tick) {\r\n  return !(tick % 5);\r\n}\r\n\r\nconst HH = 12;\r\nconst MM = 60;\r\nconst SS = 60;\r\n\r\nconst CLOCK_SIZE = 1;\r\n\r\nconst HAND_HH_LENGTH = 0.6;\r\nconst HAND_MM_LENGTH = 0.7;\r\nconst HAND_SS_COLOR = 0xffcc66;\r\nconst HAND_SS_LENGTH = 0.8;\r\nconst HAND_THICKNESS = 0.02;\r\n\r\nconst MARK_HH_COLOR = 0xff0000;\r\nconst MARK_HH_LENGTH = 0.1;\r\nconst MARK_HH_WIDTH = 0.02;\r\nconst MARK_MM_COLOR = 0xffffff;\r\nconst MARK_MM_LENGTH = 0.08;\r\nconst MARK_MM_WIDTH = 0.01;\r\nconst MARK_OFFSET = 0.05;\r\n\r\n/**\r\n * Clock using standard react-three-fiber jsx\r\n */\r\nexport default (props) => {\r\n  const clockRef = useRef();\r\n  const handHoursRef = useRef();\r\n  const handMinutesRef = useRef();\r\n  const handSecondsRef = useRef();\r\n\r\n  const angleStart = THREE.MathUtils.degToRad(90);\r\n\r\n  useFrame(() => {\r\n    const d = new Date();\r\n    if (handHoursRef.current) {\r\n      handHoursRef.current.rotation.z = THREE.MathUtils.degToRad(\r\n        (d.getHours() + d.getMinutes() / MM) * -(360 / HH)\r\n      );\r\n    }\r\n    if (handMinutesRef.current) {\r\n      handMinutesRef.current.rotation.z = THREE.MathUtils.degToRad(\r\n        d.getMinutes() * -(360 / MM)\r\n      );\r\n    }\r\n    if (handSecondsRef.current) {\r\n      handSecondsRef.current.rotation.z = THREE.MathUtils.degToRad(\r\n        d.getSeconds() * -(360 / SS)\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={clockRef} {...props}>\r\n      {/* <axesHelper /> */}\r\n      <group>\r\n        <Text color=\"black\" position={[0, -0.25, 0.01]}>\r\n          Arteveldehogeschool\r\n        </Text>\r\n        {Array(HH)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const c = new MathCircle(CLOCK_SIZE - MARK_HH_LENGTH * 2.5);\r\n            const angle = index * (360 / HH) + 90;\r\n            const { x, y } = c.getCoordinates(angle);\r\n            return (\r\n              <Text\r\n                color={HAND_SS_COLOR}\r\n                key={index}\r\n                position={[x, y, 0.01]}\r\n                scale={[1.2, 1.2, 1]}\r\n              >\r\n                {(12 - index).toString()}\r\n              </Text>\r\n            );\r\n          })}\r\n      </group>\r\n      <group rotation={[0, 0, angleStart]}>\r\n        <mesh receiveShadow={true}>\r\n          <circleBufferGeometry args={[CLOCK_SIZE, MM]} />\r\n          <meshStandardMaterial opacity={0.25} transparent={true} />\r\n        </mesh>\r\n        <group position={[0, 0, HAND_THICKNESS / 2]}>\r\n          <group position={[0, 0, HAND_THICKNESS / 2]} ref={handHoursRef}>\r\n            <mesh castShadow={true} position={[HAND_HH_LENGTH / 2, 0, 0]}>\r\n              <boxBufferGeometry\r\n                args={[HAND_HH_LENGTH, 0.06, HAND_THICKNESS]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group position={[0, 0, HAND_THICKNESS * 2]} ref={handMinutesRef}>\r\n            <mesh castShadow={true} position={[HAND_MM_LENGTH / 2, 0, 0]}>\r\n              <boxBufferGeometry\r\n                args={[HAND_MM_LENGTH, 0.04, HAND_THICKNESS]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[0, 0, HAND_THICKNESS * 3 + HAND_THICKNESS / 2]}\r\n            ref={handSecondsRef}\r\n          >\r\n            <mesh castShadow={true} position={[HAND_SS_LENGTH / 2, 0, 0]}>\r\n              <boxBufferGeometry\r\n                args={[HAND_SS_LENGTH, 0.02, HAND_THICKNESS]}\r\n              />\r\n              <meshStandardMaterial color={HAND_SS_COLOR} />\r\n            </mesh>\r\n          </group>\r\n        </group>\r\n        {Array(MM)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const radians = THREE.MathUtils.degToRad((360 / MM) * index);\r\n\r\n            return (\r\n              <group\r\n                key={index}\r\n                rotation={[0, 0, radians]}\r\n                position={[0, 0, 0.005]}\r\n              >\r\n                <mesh\r\n                  position={[\r\n                    CLOCK_SIZE -\r\n                      MARK_OFFSET -\r\n                      (isHour(index) ? MARK_HH_LENGTH - 0.01 : MARK_MM_LENGTH) /\r\n                        2,\r\n                    0,\r\n                    0,\r\n                  ]}\r\n                >\r\n                  <boxBufferGeometry\r\n                    args={[\r\n                      isHour(index) ? MARK_HH_LENGTH : MARK_MM_LENGTH,\r\n                      isHour(index) ? MARK_HH_WIDTH : MARK_MM_WIDTH,\r\n                      0.01,\r\n                    ]}\r\n                  />\r\n                  <meshStandardMaterial\r\n                    color={\r\n                      index === 0\r\n                        ? 0x0000ff\r\n                        : isHour(index)\r\n                        ? MARK_HH_COLOR\r\n                        : MARK_MM_COLOR\r\n                    }\r\n                  />\r\n                </mesh>\r\n              </group>\r\n            );\r\n          })}\r\n        <mesh\r\n          castShadow={true}\r\n          position={[0, 0, 0.05]}\r\n          rotation={[-90, 0, 0].map((degrees) =>\r\n            THREE.MathUtils.degToRad(degrees)\r\n          )}\r\n        >\r\n          <cylinderBufferGeometry args={[0.1, 0.05, HAND_THICKNESS * 5, 36]} />\r\n          <meshStandardMaterial />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { ZeroFill } from \"App/utils\";\r\n\r\nexport default (props) => {\r\n  const clockRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.rotation.x = THREE.MathUtils.degToRad(-30);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    let d = new Date();\r\n\r\n    const HH = new ZeroFill(d.getHours(), 2);\r\n    const MM = new ZeroFill(d.getMinutes(), 2);\r\n    const SS = new ZeroFill(d.getSeconds(), 2);\r\n    if (clockRef.current) {\r\n      clockRef.current.text = `${HH}:${MM}:${SS}`;\r\n    }\r\n  });\r\n\r\n  return <Text fontSize={2} ref={clockRef} {...props} />;\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { animated, useSpring } from \"react-spring/three\";\r\n\r\nexport default (props) => {\r\n  const colors = [\"#f00\", \"#ff0\", \"#0f0\", \"#0ff\", \"#00f\", \"#f0f\"];\r\n  const color = colors[Math.floor(Math.random() * colors.length)];\r\n  const cubeRef = useRef();\r\n  const [toggle, setToggle] = useState(true);\r\n  const { opacity } = useSpring({\r\n    opacity: toggle ? 0.9 : 0.5,\r\n  });\r\n  const { position } = useSpring({\r\n    position: toggle ? [0, 0, 0] : getPosition(),\r\n  });\r\n\r\n  function getPosition() {\r\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\r\n  }\r\n\r\n  return (\r\n    <animated.mesh\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      position={position}\r\n    >\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <animated.meshMatcapMaterial\r\n        color={color}\r\n        opacity={opacity}\r\n        ref={cubeRef}\r\n        transparent={true}\r\n      />\r\n    </animated.mesh>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Plane } from \"@react-three/drei\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <Plane\r\n      args={[10, 10]}\r\n      rotation={[THREE.MathUtils.degToRad(-90), 0, 0]}\r\n      {...props}\r\n    >\r\n      <meshStandardMaterial />\r\n    </Plane>\r\n  );\r\n};\r\n","// @todo Rotate gauge based on range, in stead of compensating rotation in calculation.\r\nimport React, { useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { Box, Circle, Cone, Cylinder } from \"@react-three/drei\";\r\n\r\nconst ANGLE_RANGE = 270;\r\nconst NEEDLE_STEP = {\r\n  DOWN: -250,\r\n  UP: 60,\r\n};\r\n\r\nexport default (props) => {\r\n  const TICK_MARKS = [\r\n    { color: \"green\", label: \"0\", ref: useRef(), value: 0 },\r\n    { color: \"white\", label: \"10\", ref: useRef(), value: 1000 },\r\n    { color: \"white\", label: \"20\", ref: useRef(), value: 2000 },\r\n    { color: \"white\", label: \"30\", ref: useRef(), value: 3000 },\r\n    { color: \"white\", label: \"40\", ref: useRef(), value: 4000 },\r\n    { color: \"white\", label: \"50\", ref: useRef(), value: 5000 },\r\n    { color: \"orange\", label: \"60\", ref: useRef(), value: 6000 },\r\n    { color: \"red\", label: \"70\", ref: useRef(), value: 7000 },\r\n    { color: \"red\", label: \"80\", ref: useRef(), value: 8000 },\r\n  ];\r\n  const angleStep = ANGLE_RANGE / (TICK_MARKS.length - 1);\r\n  const angleStart = THREE.MathUtils.degToRad(-(90 + (360 - ANGLE_RANGE) / 2));\r\n  const valueRange = (TICK_MARKS.length - 1) * 1000;\r\n  const valueStep = ANGLE_RANGE / valueRange;\r\n  const needleRef = useRef();\r\n  let needleAngle = 0;\r\n  let needleValue = 0;\r\n  let needleStep = NEEDLE_STEP.UP;\r\n\r\n  useFrame(() => {\r\n    if (needleValue <= 0) {\r\n      needleStep = NEEDLE_STEP.UP;\r\n    } else if (valueRange <= needleValue) {\r\n      needleStep = NEEDLE_STEP.DOWN;\r\n    }\r\n    needleValue += needleStep;\r\n    needleAngle = THREE.MathUtils.degToRad(-(valueStep * needleValue));\r\n    needleRef.current.rotation.z = needleAngle;\r\n\r\n    TICK_MARKS.forEach((tickMark) => {\r\n      tickMark.ref.current.children[0].material.color.setColorName(\r\n        tickMark.value <= needleValue ? \"blue\" : tickMark.color\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <group {...props} rotation={[0, 0, angleStart]}>\r\n      <Circle args={[1.2, 62]} position={[0, 0, 0]} receiveShadow={true}>\r\n        <meshStandardMaterial opacity={0.25} transparent={true} />\r\n      </Circle>\r\n      {TICK_MARKS.map((tickMark, index) => {\r\n        return (\r\n          <group\r\n            key={index}\r\n            ref={tickMark.ref}\r\n            rotation={[0, 0, -angleStep * index].map((degrees) =>\r\n              THREE.MathUtils.degToRad(degrees)\r\n            )}\r\n          >\r\n            <Box args={[0.25, 0.05, 0.02]} position={[1, 0, 0.01]}>\r\n              <meshStandardMaterial\r\n                color={tickMark.color}\r\n                metalness={0.1}\r\n                opacity={0.5}\r\n                roughness={0.6}\r\n                transparent={true}\r\n              />\r\n            </Box>\r\n          </group>\r\n        );\r\n      })}\r\n\r\n      <group position={[0, 0, 0.05]}>\r\n        <group ref={needleRef}>\r\n          <group\r\n            rotation={[0, 0, -90].map((degrees) =>\r\n              THREE.MathUtils.degToRad(degrees)\r\n            )}\r\n          >\r\n            <Cone args={[0.03, 1, 4]} castShadow={true} position={[0, 0.5, 0]}>\r\n              <meshStandardMaterial\r\n                color=\"orange\"\r\n                metalness={0.1}\r\n                roughness={0.6}\r\n              />\r\n            </Cone>\r\n          </group>\r\n        </group>\r\n        <Cylinder\r\n          args={[0.1, 0.05, 0.1, 36]}\r\n          castShadow={true}\r\n          rotation={[-90, 0, 0].map((degrees) =>\r\n            THREE.MathUtils.degToRad(degrees)\r\n          )}\r\n        >\r\n          <meshStandardMaterial />\r\n        </Cylinder>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/UV_Grid_Sm.8ab40f71.jpg\";","import React from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useTexture } from \"@react-three/drei\";\r\n\r\nimport uvGrid from \"./UV_Grid_Sm.jpg\";\r\n\r\nexport default () => {\r\n  const texture = useTexture(uvGrid, true);\r\n  texture.offset = new THREE.Vector2(0, 0);\r\n  texture.repeat = new THREE.Vector2(1, 1);\r\n\r\n  return (\r\n    <mesh>\r\n      <planeBufferGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial center map={texture} side={THREE.DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/arteveldehogeschool_logo.6220cd57.svg\";","export default __webpack_public_path__ + \"static/media/SVG_logo.e87754b4.svg\";","import React from \"react\";\r\nimport { SvgLoader } from \"App/components\";\r\n\r\nconst svgLogoUrl =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg\";\r\nimport logoNl from \"./arteveldehogeschool_logo.svg\";\r\nimport svgLogo from \"./SVG_logo.svg\";\r\n\r\nexport default (props) => {\r\n  const scale = 0.0075;\r\n\r\n  return (\r\n    <>\r\n      <SvgLoader position={[0, 0, 0]} scale={scale} source={svgLogoUrl} />;\r\n      <SvgLoader position={[0, 0, -1]} scale={scale} source={logoNl} />;\r\n      <SvgLoader position={[0, 0, -2]} scale={scale} source={svgLogo} />;\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={0xffffff}\r\n        intensity={1}\r\n        position={[4, 4, 1]}\r\n      />\r\n      <hemisphereLight />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        position={[-4, 1, -4]}\r\n      />\r\n      <spotLight\r\n        angle={THREE.MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={1}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame, useResource, useThree } from \"react-three-fiber\";\r\nimport { useControl } from \"react-three-gui\";\r\n\r\nexport default () => {\r\n  const directionalLightRef = useResource();\r\n  // const hemisphereLightRef = useResource();\r\n  const pointLightRef = useResource();\r\n  const spotLightRef = useResource();\r\n  const spotLightHelperRef = useRef();\r\n  const { scene } = useThree();\r\n  const target = new THREE.Object3D();\r\n\r\n  scene.add(target);\r\n\r\n  const helperSize = 0.5;\r\n  const showLightHelpers = useControl(\"Light helpers\", {\r\n    group: \"Helpers\",\r\n    type: \"boolean\",\r\n    value: true,\r\n  });\r\n  const ambientLightColor = useControl(\"Color\", {\r\n    group: \"Ambient Light\",\r\n    type: \"color\",\r\n    value: \"#ffffff\",\r\n  });\r\n  const ambientLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Ambient Light\",\r\n    type: \"number\",\r\n    value: 0.1,\r\n    min: 0,\r\n    max: 1,\r\n  });\r\n  const directionalLightColor = useControl(\"Color\", {\r\n    group: \"Directional Light\",\r\n    type: \"color\",\r\n    value: \"#ffffff\",\r\n  });\r\n  const directionalLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Directional Light\",\r\n    type: \"number\",\r\n    value: 1,\r\n    min: 0,\r\n    max: 1,\r\n  });\r\n  const pointLightColor = useControl(\"Color\", {\r\n    group: \"Point Light\",\r\n    type: \"color\",\r\n    value: \"#ffcc77\",\r\n  });\r\n  const pointLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Point Light\",\r\n    type: \"number\",\r\n    value: 0.5,\r\n    min: 0,\r\n    max: 20,\r\n  });\r\n  const pointLightPosition = useControl(\"Position XZ\", {\r\n    group: \"Point Light\",\r\n    type: \"xypad\",\r\n    distance: 5,\r\n    value: { x: -4, y: -4 },\r\n  });\r\n  const spotLightColor = useControl(\"Color\", {\r\n    group: \"Spot Light\",\r\n    type: \"color\",\r\n    value: \"#ffcc77\",\r\n  });\r\n  const spotLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Spot Light\",\r\n    type: \"number\",\r\n    value: 1,\r\n    min: 0,\r\n    max: 20,\r\n  });\r\n  const spotLightPosition = useControl(\"Position XZ\", {\r\n    group: \"Spot Light\",\r\n    type: \"xypad\",\r\n    distance: 5,\r\n    value: { x: 0, y: 0 },\r\n  });\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLightPosition.x);\r\n    target.translateZ(spotLightPosition.y);\r\n    if (spotLightHelperRef.current) {\r\n      spotLightHelperRef.current.update();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={directionalLightColor}\r\n        intensity={directionalLightIntensity}\r\n        position={[4, 4, 1]}\r\n        ref={directionalLightRef}\r\n      />\r\n      {/* <hemisphereLight ref={hemisphereLightRef} /> */}\r\n      <pointLight\r\n        castShadow={true}\r\n        color={pointLightColor}\r\n        intensity={pointLightIntensity}\r\n        position={[pointLightPosition.x, 1, pointLightPosition.y]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={THREE.MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={spotLightColor}\r\n        intensity={spotLightIntensity}\r\n        penumbra={0.5}\r\n        position={[spotLightPosition.x, 4, spotLightPosition.y]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n      {showLightHelpers && (\r\n        <>\r\n          {directionalLightRef.current && (\r\n            <directionalLightHelper\r\n              args={[\r\n                directionalLightRef.current,\r\n                helperSize,\r\n                directionalLightColor,\r\n              ]}\r\n            />\r\n          )}\r\n          {/* {hemisphereLightRef.current && (\r\n            <hemisphereLightHelper\r\n              args={[hemisphereLightRef.current, helperSize]}\r\n            />\r\n          )} */}\r\n          {pointLightRef.current && (\r\n            <pointLightHelper\r\n              args={[pointLightRef.current, helperSize, pointLightColor]}\r\n            />\r\n          )}\r\n          {spotLightRef.current && (\r\n            <spotLightHelper\r\n              args={[spotLightRef.current, spotLightColor]}\r\n              ref={spotLightHelperRef}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.4}\r\n        position={[0, 2, 4]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        position={[-4, 0, 0]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        position={[4, 0, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useResource } from \"react-three-fiber\";\r\nimport { useControl } from \"react-three-gui\";\r\n\r\nexport default () => {\r\n  const frontLightRef = useResource();\r\n  const leftLightRef = useResource();\r\n  const rightLightRef = useResource();\r\n\r\n  const helperSize = 0.5;\r\n  const showLightHelpers = useControl(\"Light helpers\", {\r\n    group: \"Helpers\",\r\n    type: \"boolean\",\r\n    value: true,\r\n  });\r\n  const ambientLightColor = useControl(\"Color\", {\r\n    group: \"Ambient Light\",\r\n    type: \"color\",\r\n    value: \"hsl(0, 0%, 100%)\",\r\n  });\r\n  const ambientLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Ambient Light\",\r\n    type: \"number\",\r\n    value: 0.1,\r\n    min: 0,\r\n    max: 1,\r\n  });\r\n  const frontLightColor = useControl(\"Color\", {\r\n    group: \"Front Light\",\r\n    type: \"color\",\r\n    value: \"hsl(0, 0%, 70%)\",\r\n  });\r\n  const frontLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Front Light\",\r\n    type: \"number\",\r\n    value: 0.4,\r\n    min: 0,\r\n    max: 2,\r\n  });\r\n  const leftLightColor = useControl(\"Color\", {\r\n    group: \"Left Light\",\r\n    type: \"color\",\r\n    value: \"hsl(210, 100%, 70%)\",\r\n  });\r\n  const leftLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Left Light\",\r\n    type: \"number\",\r\n    value: 1,\r\n    min: 0,\r\n    max: 2,\r\n  });\r\n  const rightLightColor = useControl(\"Color\", {\r\n    group: \"Right Light\",\r\n    type: \"color\",\r\n    value: \"hsl(30, 100%, 70%)\",\r\n  });\r\n  const rightLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Right Light\",\r\n    type: \"number\",\r\n    value: 1,\r\n    min: 0,\r\n    max: 2,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={frontLightColor}\r\n        intensity={frontLightIntensity}\r\n        position={[0, 2, 4]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={leftLightColor}\r\n        intensity={leftLightIntensity}\r\n        position={[-4, 0, 0]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={rightLightColor}\r\n        intensity={rightLightIntensity}\r\n        position={[4, 0, 0]}\r\n        ref={rightLightRef}\r\n      />\r\n      {showLightHelpers && (\r\n        <>\r\n          {frontLightRef.current && (\r\n            <directionalLightHelper\r\n              args={[frontLightRef.current, helperSize, frontLightColor]}\r\n            />\r\n          )}\r\n          {leftLightRef.current && (\r\n            <directionalLightHelper\r\n              args={[leftLightRef.current, helperSize, leftLightColor]}\r\n            />\r\n          )}\r\n          {rightLightRef.current && (\r\n            <directionalLightHelper\r\n              args={[rightLightRef.current, helperSize, rightLightColor]}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, -4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[-4, 2, 4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, 4]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useResource } from \"react-three-fiber\";\r\nimport { useControl } from \"react-three-gui\";\r\n\r\nexport default () => {\r\n  const backLightRef = useResource();\r\n  const fillLightRef = useResource();\r\n  const keyLightRef = useResource();\r\n\r\n  const showLightHelpers = useControl(\"Light helpers\", {\r\n    group: \"Helpers\",\r\n    type: \"boolean\",\r\n    value: true,\r\n  });\r\n  const ambientLightColor = useControl(\"Color\", {\r\n    group: \"Ambient Light\",\r\n    type: \"color\",\r\n    value: \"hsl(0, 0%, 100%)\",\r\n  });\r\n  const ambientLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Ambient Light\",\r\n    type: \"number\",\r\n    value: 0.1,\r\n    min: 0,\r\n    max: 1,\r\n  });\r\n  const backLightColor = useControl(\"Color\", {\r\n    group: \"Back Light\",\r\n    type: \"color\",\r\n    value: \"hsl(0, 0%, 70%)\",\r\n  });\r\n  const backLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Back Light\",\r\n    type: \"number\",\r\n    value: 0.75,\r\n    min: 0,\r\n    max: 2,\r\n  });\r\n  const fillLightColor = useControl(\"Color\", {\r\n    group: \"Fill Light\",\r\n    type: \"color\",\r\n    value: \"hsl(210, 100%, 70%)\",\r\n  });\r\n  const fillLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Fill Light\",\r\n    type: \"number\",\r\n    value: 0.75,\r\n    min: 0,\r\n    max: 2,\r\n  });\r\n  const keyLightColor = useControl(\"Color\", {\r\n    group: \"Key Light\",\r\n    type: \"color\",\r\n    value: \"hsl(30, 100%, 70%)\",\r\n  });\r\n  const keyLightIntensity = useControl(\"Intensity\", {\r\n    group: \"Key Light\",\r\n    type: \"number\",\r\n    value: 0.75,\r\n    min: 0,\r\n    max: 2,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={backLightColor}\r\n        intensity={backLightIntensity}\r\n        position={[4, 2, -4]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={fillLightColor}\r\n        intensity={fillLightIntensity}\r\n        position={[-4, 2, 4]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={keyLightColor}\r\n        intensity={keyLightIntensity}\r\n        position={[4, 2, 4]}\r\n        ref={keyLightRef}\r\n      />\r\n      {showLightHelpers && (\r\n        <>\r\n          {backLightRef.current && (\r\n            <spotLightHelper args={[backLightRef.current, backLightColor]} />\r\n          )}\r\n\r\n          {fillLightRef.current && (\r\n            <spotLightHelper args={[fillLightRef.current, fillLightColor]} />\r\n          )}\r\n          {keyLightRef.current && (\r\n            <spotLightHelper args={[keyLightRef.current, keyLightColor]} />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/gltf-logo.d3501fc2.glb\";","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nexport default () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logoRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    logoRef.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <primitive\r\n      object={gltfLogo.scene}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      position={[0, 0, 0]}\r\n      ref={logoRef}\r\n    />\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nexport default () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logo1Ref = useRef();\r\n  const logo2Ref = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (logo1Ref.current)\r\n      logo1Ref.current.rotation.x += speed * (clockwise ? 1 : -1);\r\n    if (logo2Ref.current)\r\n      logo2Ref.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <group onClick={() => setClockwise(!clockwise)}>\r\n      <primitive\r\n        object={gltfLogo.scene}\r\n        position={[-1, -1, 0]}\r\n        ref={logo1Ref}\r\n      />\r\n      <primitive\r\n        object={gltfLogo.scene.clone(true)}\r\n        position={[1, 1, 0]}\r\n        ref={logo2Ref}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n","export default {\r\n  Architects_Daughter:\r\n    \"https://fonts.gstatic.com/s/architectsdaughter/v11/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY0.woff\",\r\n  Press_Start_2P:\r\n    \"https://fonts.gstatic.com/s/pressstart2p/v9/e3t4euO8T-267oIAQAu6jDQyK0nR.woff\",\r\n  Roboto_Slab:\r\n    \"https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSWaw.woff\",\r\n};\r\n","/**\r\n * https://pixologic.com/zbrush/downloadcenter/library/\r\n * https://www.badking.com.au/site/product-category/materials/\r\n * https://www.zbrushcentral.com/t/matcap-repository/205029\r\n */\r\nexport default {\r\n  // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n  id: {\r\n    GREEN_CRYSTAL: \"2E763A_78A0B7_B3D1CF_14F209\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-3.md#2e763a_78a0b7_b3d1cf_14f209 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/erklaerbar/ok_green_crystal.jpg\r\n    SILVERY: \"4C4C4C_D2D2D2_8F8F8F_ACACAC\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-8.md#4c4c4c_d2d2d2_8f8f8f_acacac https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/slosh/bgs_silvery.jpg\r\n    TITANIUM: \"C7C7D7_4C4E5A_818393_6C6C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-28.md#c7c7d7_4c4e5a_818393_6c6c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/arranlewis/al_titanium.jpg\r\n    WORN_GOLD: \"6E5137_E8CA90_271912_B99C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-15.md#6e5137_e8ca90_271912_b99c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/thumbs/sathe/gw_worn_gold.jpg\r\n  },\r\n\r\n  // Texture size\r\n  size: {\r\n    XS: 64,\r\n    SM: 128,\r\n    MD: 256,\r\n    LG: 512,\r\n    XL: 1024,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { Text, useMatcapTexture } from \"@react-three/drei\";\r\nimport { FontFamily, MatCap } from \"App/lib\";\r\n\r\nexport default () => {\r\n  const [matcapGreenCrystal] = useMatcapTexture(\r\n    MatCap.id.GREEN_CRYSTAL,\r\n    MatCap.size.XL\r\n  );\r\n  const [matcapSilvery] = useMatcapTexture(MatCap.id.SILVERY, MatCap.size.XL);\r\n  const [matcapWornGold] = useMatcapTexture(\r\n    MatCap.id.WORN_GOLD,\r\n    MatCap.size.XL\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize={1} position={[0, 1, -0.2]}>\r\n        Lorem Ipsum\r\n        <meshLambertMaterial />\r\n      </Text>\r\n      <Text font={FontFamily.Roboto_Slab} fontSize={1} position={[0, 0, 0]}>\r\n        Lorem Ipsum\r\n        <meshMatcapMaterial matcap={matcapWornGold} />\r\n      </Text>\r\n      <Text\r\n        font={FontFamily.Architects_Daughter}\r\n        fontSize={1}\r\n        opacity={0.5}\r\n        position={[0, -1, 0.1]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapGreenCrystal} />\r\n      </Text>\r\n      <Text\r\n        color={0x000000}\r\n        font={FontFamily.Press_Start_2P}\r\n        fontSize={1}\r\n        outlineColor={0x00ff00}\r\n        outlineWidth={0.04}\r\n        position={[0, -2, 0.2]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapSilvery} opacity={0.9} />\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/normals.c5aed970.glb\";","import React, { useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nimport normalsGlb from \"./normals.glb\";\r\n\r\nexport default () => {\r\n  const normals = useGLTF(normalsGlb, true);\r\n  const normalsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    if (normalsRef.current) {\r\n      normalsRef.current.rotation.x += 0.02;\r\n    }\r\n  });\r\n\r\n  return <primitive object={normals.scene} ref={normalsRef} />;\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { Box, Flex } from \"@react-three/flex\";\r\nimport { Manager } from \"socket.io-client\";\r\nimport { ZeroFill } from \"App/utils\";\r\n\r\nexport default () => {\r\n  const distanceRef = useRef();\r\n  const speedRef = useRef();\r\n\r\n  const PORT = 3001;\r\n  const manager = new Manager(`http://localhost:${PORT}`);\r\n  const socket = manager.socket(\"/\");\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"Socket connected: \", socket.connected);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"Socket disconnected\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"telemetry\", (message) => {\r\n      const distance = new ZeroFill(message.distance, 6, \" km\");\r\n      const speed = new ZeroFill(message.speed, 3, \" km/u\");\r\n      if (distanceRef.current) distanceRef.current.text = distance;\r\n      if (speedRef.current) speedRef.current.text = speed;\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Flex\r\n      flexDirection=\"row\"\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-between\"\r\n      position={[-3, 0, 0]}\r\n      size={[6, 0, 0]}\r\n    >\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(210, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={distanceRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(30, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={speedRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useMatcapTexture } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"react-spring/three\";\r\nimport * as easings from \"d3-ease\";\r\n\r\nexport default (props) => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const [matcap] = useMatcapTexture(\r\n    \"80CA23_B7EE37_D5FA4C_A3E434\", // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n    1024 // Texture size (64, 128, 256, 512, 1024)\r\n  );\r\n  const { opacity, position } = useSpring({\r\n    config: {\r\n      duration: 200,\r\n      easing: easings.easeCubic,\r\n    },\r\n    delay: 100,\r\n    from: {\r\n      opacity: toggle ? 0.5 : 1,\r\n      position: toggle ? [0, 0, 0] : [0, 0, -2],\r\n    },\r\n    to: [\r\n      { opacity: toggle ? 1 : 0.5 },\r\n      { opacity: toggle ? 0.5 : 1 },\r\n      { opacity: toggle ? 1 : 0.5, position: toggle ? [0, 0, -2] : [0, 0, 0] },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh onClick={() => setToggle(!toggle)}>\r\n        <ringBufferGeometry\r\n          args={[\r\n            1.1, // innerRadius\r\n            1.9, // outerRadius\r\n            72, // thetaSegments\r\n            8, // phiSegments\r\n            THREE.MathUtils.degToRad(90), // thetaStart\r\n            THREE.MathUtils.degToRad(350), // thetaLength\r\n          ]}\r\n        />\r\n        <animated.meshMatcapMaterial\r\n          // color={materialProps.color}\r\n          matcap={matcap}\r\n          opacity={opacity}\r\n          side={THREE.DoubleSide}\r\n          transparent={true}\r\n        />\r\n      </mesh>\r\n      <animated.mesh position={position}>\r\n        <torusBufferGeometry\r\n          args={[\r\n            1.5, // radius\r\n            0.5, // tube\r\n            72, // radialSegments\r\n            32, // tubularSegments\r\n            THREE.MathUtils.degToRad(360), // arc\r\n          ]}\r\n        />\r\n        <meshMatcapMaterial matcap={matcap} opacity={0.25} transparent={true} />\r\n      </animated.mesh>\r\n    </group>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useMatcapTexture } from \"@react-three/drei\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport { config } from \"react-spring/three\";\r\n\r\nexport default (props) => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const [matcap] = useMatcapTexture(\r\n    \"80CA23_B7EE37_D5FA4C_A3E434\", // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n    1024 // Texture size (64, 128, 256, 512, 1024)\r\n  );\r\n  return (\r\n    <group {...props}>\r\n      <mesh onClick={() => setToggle(!toggle)}>\r\n        <Spring\r\n          config={config.wobbly}\r\n          delay={100}\r\n          from={{ thetaLength: toggle ? 10 : 350 }}\r\n          to={{ thetaLength: toggle ? 350 : 10 }}\r\n        >\r\n          {(geometryProps) => (\r\n            <ringBufferGeometry\r\n              args={[\r\n                1.1, // innerRadius\r\n                1.9, // outerRadius\r\n                72, // thetaSegments\r\n                8, // phiSegments\r\n                THREE.MathUtils.degToRad(90), // thetaStart\r\n                THREE.MathUtils.degToRad(geometryProps.thetaLength), // thetaLength\r\n              ]}\r\n            />\r\n          )}\r\n        </Spring>\r\n        <meshMatcapMaterial\r\n          matcap={matcap}\r\n          opacity={1}\r\n          side={THREE.DoubleSide}\r\n          transparent={true}\r\n        />\r\n      </mesh>\r\n      <mesh>\r\n        <torusBufferGeometry\r\n          args={[\r\n            1.5, // radius\r\n            0.5, // tube\r\n            36, // radialSegments\r\n            72, // tubularSegments\r\n            THREE.MathUtils.degToRad(360), // arc\r\n          ]}\r\n        />\r\n        <meshMatcapMaterial matcap={matcap} opacity={0.25} transparent={true} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/suzanne.a6e83718.glb\";","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nexport default () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n  const [rotate, setRotate] = useState(false);\r\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\r\n  const objectRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (objectRef.current) {\r\n      objectRef.current.rotation.x +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.y +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.z +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group\r\n      ref={objectRef}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      onDoubleClick={() => setRotate(!rotate)}\r\n    >\r\n      <mesh geometry={nodes.Suzanne.geometry} material={materials[\"Paars\"]} />\r\n    </group>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useGLTF, useMatcapTexture, useSubdivision } from \"@react-three/drei\";\r\nimport { MatCap } from \"App/lib\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nexport default () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const suzanneRef = useSubdivision(2);\r\n\r\n  const [matcap] = useMatcapTexture(MatCap.id.WORN_GOLD, MatCap.size.XL);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry} ref={suzanneRef}>\r\n      <meshMatcapMaterial matcap={matcap} />\r\n    </mesh>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useGLTF, useNormalTexture, useSubdivision } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nexport default () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const suzanneRef = useSubdivision(2);\r\n\r\n  const [normalMap] = useNormalTexture(\r\n    8, // Index or file name, see: https://github.com/emmelleppi/normal-maps/\r\n\r\n    //0 index of the normal texture - https://github.com/emmelleppi/normal-maps/blob/master/normals.json\r\n    {\r\n      anisotropy: 8,\r\n      offset: [0, 0],\r\n      repeat: [10, 10],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry} ref={suzanneRef}>\r\n      <meshStandardMaterial normalMap={normalMap} />\r\n    </mesh>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useGLTF, useSubdivision } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nexport default () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const suzanneRef = useSubdivision(2);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry} ref={suzanneRef}>\r\n      <meshStandardMaterial />\r\n    </mesh>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useGLTF, useSubdivision } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nexport default () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const suzanneRef = useSubdivision(2);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry} ref={suzanneRef}>\r\n      <meshToonMaterial />\r\n    </mesh>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nexport default ({ color, index, shape }) => {\r\n  // console.log(\"Shape\", color, index);\r\n  return (\r\n    <mesh position={[0, 0, -0.05 * index]}>\r\n      <shapeBufferGeometry args={[shape]} />\r\n      <meshBasicMaterial color={color} side={THREE.DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n","import * as THREE from \"three\";\r\nimport Shape from \"./Shape\";\r\n\r\nexport default ({ paths, position, scale }) => {\r\n  // console.log(\"Group\", paths, scale);\r\n  return (\r\n    <group\r\n      position={position}\r\n      rotation={[180, 0, 0].map((degrees) => THREE.MathUtils.degToRad(degrees))}\r\n      scale={scale}\r\n    >\r\n      {paths.map((path, index) => {\r\n        // console.log(\"Path\", index, path, path.color, path.toShapes());\r\n        const shapes = path.toShapes();\r\n        const pathIndex = index;\r\n        return shapes.map((shape, index) => {\r\n          return (\r\n            <Shape\r\n              color={path.color}\r\n              index={index + pathIndex}\r\n              key={index}\r\n              shape={shape}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader\";\r\nimport Group from \"./Group\";\r\n\r\nexport default (props) => {\r\n  const [paths, setPaths] = useState([]);\r\n  const position = props.position;\r\n  const scale = [props.scale, props.scale, props.scale];\r\n\r\n  useEffect(() => {\r\n    const svgResource = new Promise((resolve) =>\r\n      new SVGLoader().load(props.source, (data) => resolve(data.paths))\r\n    );\r\n    svgResource.then(setPaths);\r\n  }, []);\r\n\r\n  return <Group paths={paths} position={position} scale={scale} />;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n  const length = 1;\r\n  const radius = (length / 100) * 2;\r\n  const segments = 32;\r\n  const thickness = length / 100;\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh>\r\n        <boxBufferGeometry\r\n          args={[1, 1, 1].map((value) => value * 1.5 * thickness)}\r\n        />\r\n        <meshMatcapMaterial color={0xffffff} />\r\n      </mesh>\r\n\r\n      {Array(3)\r\n        .fill()\r\n        .map((value, index) => {\r\n          return (\r\n            <group\r\n              key={index}\r\n              position={[0, 0, 0].map((v, i) =>\r\n                index === i ? length / 2 + thickness * 2 : v\r\n              )}\r\n            >\r\n              <mesh>\r\n                <boxBufferGeometry\r\n                  args={[1, 1, 1].map(\r\n                    (v, i) => v * (index === i ? length : thickness)\r\n                  )}\r\n                />\r\n                <meshMatcapMaterial color={0xff0000 >> (8 * index)} />\r\n              </mesh>\r\n              <mesh\r\n                position={[0, 0, 0].map((v, i) =>\r\n                  index === i ? length / 2 + thickness * 3 : v\r\n                )}\r\n              >\r\n                <sphereBufferGeometry args={[radius, segments, segments]} />\r\n                <meshMatcapMaterial color={0xffffff} />\r\n              </mesh>\r\n            </group>\r\n          );\r\n        })}\r\n    </group>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { Box, Plane, PointerLockControls } from \"@react-three/drei\";\r\nimport { useControl } from \"react-three-gui\";\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nconst BOX_SIZE = 1;\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nexport default (props) => {\r\n  const enablePointerLockControls = useControl(\"PointerLock\", {\r\n    group: \"Controls\",\r\n    type: \"boolean\",\r\n    value: true,\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[THREE.MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={THREE.DoubleSide} />\r\n      </Plane>\r\n      <Box\r\n        args={[BOX_SIZE, BOX_SIZE, BOX_SIZE]}\r\n        position={[0, BOX_SIZE / 2, 0]}\r\n      >\r\n        <meshBasicMaterial color={0xff0000} opacity={0.75} transparent={true} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nexport default () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(210, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      text=\"Wouter\"\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nexport default () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(210, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/wouter\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, 2, 0]}\r\n      text=\"Path Router\"\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nexport default () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(210, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, -2, 0]}\r\n      text=\"Path Wouter\"\r\n    />\r\n  );\r\n};\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Router } from \"wouter\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls, Stats } from \"@react-three/drei\";\r\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\nimport {\r\n  Animation,\r\n  Button,\r\n  ButtonSpring,\r\n  Clock,\r\n  ClockDigital,\r\n  Cube,\r\n  Face,\r\n  Gauge,\r\n  Image,\r\n  ImageSvg,\r\n  Lighting,\r\n  LightingGui,\r\n  LightingStudio,\r\n  LightingStudioGui,\r\n  LightingThreePoint,\r\n  LightingThreePointGui,\r\n  Logo,\r\n  LogoDouble,\r\n  LoremIpsum,\r\n  Normals,\r\n  Socket,\r\n  Spring,\r\n  SpringProps,\r\n  Suzanne,\r\n  SuzanneMatcapTexture,\r\n  SuzanneNormalTexture,\r\n  SuzanneStandardMaterial,\r\n  SuzanneToonMaterial,\r\n  Tripod,\r\n  World,\r\n  Wouter,\r\n  WouterPathRouter,\r\n  WouterPathWouter,\r\n} from \"App/components\";\r\nimport { useControl } from \"react-three-gui\";\r\n\r\nconst currentLocation = () => window.location.hash.replace(\"#\", \"\") || \"/\";\r\nconst useHashLocation = () => {\r\n  const [location, setLocation] = useState(currentLocation());\r\n\r\n  useEffect(() => {\r\n    const handler = () => setLocation(currentLocation());\r\n    window.addEventListener(\"hashchange\", handler);\r\n    return () => window.removeEventListener(\"hashchange\", handler);\r\n  }, []);\r\n\r\n  const navigate = useCallback((to) => (window.location.hash = to), []);\r\n  return [location, navigate];\r\n};\r\n\r\nexport default () => {\r\n  const components = [\r\n    \"None\",\r\n    \"Animation\",\r\n    \"Button\",\r\n    \"Button (React Spring)\",\r\n    \"Clock (analogue)\",\r\n    \"Clock (digital)\",\r\n    \"Cube (positioned)\",\r\n    \"Cube\",\r\n    \"Face\",\r\n    \"Gauge\",\r\n    \"Image\",\r\n    \"Image (SVG)\",\r\n    \"Logo\",\r\n    \"Logo (double)\",\r\n    \"Lorem Ipsum\",\r\n    \"Normals\",\r\n    \"Socket (Socket.IO 3.0)\",\r\n    \"Spring\",\r\n    \"Spring (Props)\",\r\n    \"Suzanne (default)\",\r\n    \"Suzanne (MatCap Texture)\",\r\n    \"Suzanne (Normal Texture)\",\r\n    \"Suzanne (Standard Material)\",\r\n    \"Suzanne (Toon Material)\",\r\n    \"Tripod\",\r\n    \"World\",\r\n    \"Wouter (router)\",\r\n  ];\r\n\r\n  const lightings = [\r\n    \"None\",\r\n    \"Demo\",\r\n    \"Demo + GUI\",\r\n    \"Studio Lighting\",\r\n    \"Studio Lighting + GUI\",\r\n    \"Three Point Lighting\",\r\n    \"Three Point Lighting + GUI\",\r\n  ];\r\n\r\n  const enableOrbitControls = useControl(\"Orbit\", {\r\n    group: \"Controls\",\r\n    type: \"boolean\",\r\n    value: false,\r\n  });\r\n\r\n  const showEffect = useControl(\"Effect\", {\r\n    group: \"General\",\r\n    type: \"boolean\",\r\n    value: false,\r\n  });\r\n  const showStats = useControl(\"Statistics\", {\r\n    group: \"General\",\r\n    type: \"boolean\",\r\n    value: false,\r\n  });\r\n  const useComponent = useControl(\"Component\", {\r\n    group: \"General\",\r\n    type: \"select\",\r\n    value: \"Suzanne (default)\",\r\n    items: components,\r\n  });\r\n  const useLighting = useControl(\"Lighting\", {\r\n    group: \"General\",\r\n    type: \"select\",\r\n    value: \"Studio Lighting\",\r\n    items: lightings,\r\n  });\r\n\r\n  const showAxesHelper = useControl(\"Axes Helper\", {\r\n    group: \"Helpers\",\r\n    type: \"boolean\",\r\n    value: false,\r\n  });\r\n  const showGridHelper = useControl(\"Grid Helper\", {\r\n    group: \"Helpers\",\r\n    type: \"boolean\",\r\n    value: false,\r\n  });\r\n\r\n  function showLighting(name) {\r\n    return useLighting === name;\r\n  }\r\n\r\n  function showComponent(name) {\r\n    return useComponent === name;\r\n  }\r\n\r\n  return (\r\n    <Router base={process.env.PUBLIC_URL} hook={useHashLocation}>\r\n      <>\r\n        {enableOrbitControls && (\r\n          <OrbitControls\r\n            enablePan={true}\r\n            enableRotate={true}\r\n            enableZoom={true}\r\n          />\r\n        )}\r\n        {showStats && <Stats />}\r\n        {showAxesHelper && <axesHelper />}\r\n        {showGridHelper && <gridHelper args={[10, 10, 0xffffff, 0x333333]} />}\r\n      </>\r\n      {showEffect && (\r\n        <EffectComposer>\r\n          <Bloom height={500} luminanceThreshold={0} luminanceSmoothing={0.9} />\r\n        </EffectComposer>\r\n      )}\r\n      {showLighting(\"Demo\") && <Lighting />}\r\n      {showLighting(\"Demo + GUI\") && <LightingGui />}\r\n      {showLighting(\"Studio Lighting\") && <LightingStudio />}\r\n      {showLighting(\"Studio Lighting + GUI\") && <LightingStudioGui />}\r\n      {showLighting(\"Three Point Lighting\") && <LightingThreePoint />}\r\n      {showLighting(\"Three Point Lighting + GUI\") && <LightingThreePointGui />}\r\n      {showComponent(\"Button\") && <Button />}\r\n      {showComponent(\"Button (React Spring)\") && <ButtonSpring />}\r\n      {showComponent(\"Clock (analogue)\") && <Clock />}\r\n      {showComponent(\"Clock (digital)\") && <ClockDigital />}\r\n      {showComponent(\"Cube\") && <Cube />}\r\n      {showComponent(\"Cube (positioned)\") && (\r\n        <Cube\r\n          position={[1, 1, 1]}\r\n          rotation={[45, 45, 45].map((degrees) =>\r\n            THREE.MathUtils.degToRad(degrees)\r\n          )}\r\n        />\r\n      )}\r\n      {showComponent(\"Face\") && <Face />}\r\n      {showComponent(\"Gauge\") && <Gauge />}\r\n\r\n      {showComponent(\"Socket (Socket.IO 3.0)\") && <Socket />}\r\n      {true && (\r\n        <Suspense fallback={null}>\r\n          {showComponent(\"Animation\") && <Animation />}\r\n          {showComponent(\"Logo\") && <Logo />}\r\n          {showComponent(\"Logo (double)\") && <LogoDouble />}\r\n          {showComponent(\"Lorem Ipsum\") && <LoremIpsum />}\r\n          {showComponent(\"Normals\") && <Normals />}\r\n          {showComponent(\"Image\") && <Image />}\r\n          {showComponent(\"Image (SVG)\") && <ImageSvg />}\r\n          {showComponent(\"Spring\") && <Spring />}\r\n          {showComponent(\"Spring (Props)\") && <SpringProps />}\r\n          {showComponent(\"Suzanne (default)\") && <Suzanne />}\r\n          {showComponent(\"Suzanne (MatCap Texture)\") && (\r\n            <SuzanneMatcapTexture />\r\n          )}\r\n          {showComponent(\"Suzanne (Normal Texture)\") && (\r\n            <SuzanneNormalTexture />\r\n          )}\r\n          {showComponent(\"Suzanne (Standard Material)\") && (\r\n            <SuzanneStandardMaterial />\r\n          )}\r\n          {showComponent(\"Suzanne (Toon Material)\") && <SuzanneToonMaterial />}\r\n        </Suspense>\r\n      )}\r\n      {showComponent(\"Tripod\") && <Tripod />}\r\n      {showComponent(\"World\") && <World />}\r\n      {showComponent(\"Wouter (router)\") && <Wouter />}\r\n      <Route component={WouterPathRouter} path=\"/router\" />\r\n      <Route component={WouterPathWouter} path=\"/wouter\" />\r\n    </Router>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { Controls, ControlsProvider } from \"react-three-gui\";\r\nimport Content from \"App/Content\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default () => {\r\n  return (\r\n    <ControlsProvider>\r\n      <Canvas invalidateFrameloop={false} shadowMap colorManagement={false}>\r\n        <Content />\r\n      </Canvas>\r\n      <Controls title=\"Controls\" />\r\n    </ControlsProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}