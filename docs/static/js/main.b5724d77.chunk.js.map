{"version":3,"sources":["App/components/GlTransmissionFormat/glTF.glb","App/components/Suzanne/suzanne.glb","App/components/GlTransmissionFormat/index.js","App/components/Lighting/index.js","App/components/Suzanne/index.js","App/index.js","index.js"],"names":["module","exports","useState","clockwise","setClockwise","gltf","useGLTF","logo","logoRef","useRef","useFrame","current","rotation","y","ref","object","scene","onClick","position","lightRef","pos","intensity","castShadow","color","args","suzanne","nodes","materials","suzanneRef","console","log","x","z","geometry","Suzanne","material","invalidateFrameloop","shadowMap","enablePan","enableRotate","enableZoom","luminanceThreshold","luminanceSmoothing","height","Lighting","fallback","GlTransmissionFormat","ReactDOM","render","App","document","getElementById"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,gMCM5B,aAAO,IAAD,EACeC,oBAAS,GADxB,mBACZC,EADY,KACDC,EADC,KAGbC,EAAOC,YAAQC,KAAM,GACrBC,EAAUC,mBAShB,OANAC,aAAS,WAEPF,EAAQG,QAAQC,SAASC,GAJb,MAI2BV,EAAY,GAAK,MAKxD,+BACEW,IAAKN,EACLO,OAAQV,EAAKW,MACbC,QAAS,kBAAMb,GAAcD,IAC7Be,SAAU,CAAC,EAAG,EAAG,MCtBR,aACb,IAAMC,EAAWV,mBACXW,EAAM,CAAC,GAAK,GAAK,GAEvB,OACE,oCACE,kCAAcC,UAAW,KACzB,2BAAOH,SAAUE,GACf,sCACEE,YAAY,EACZC,MAAO,SACPF,UAAW,EACXP,IAAKK,IAEP,0BAAMD,SAAUE,GACd,0CAAsBI,KAAM,CAAC,IAAM,GAAI,MACvC,+CAIJ,gCAAYD,MAAO,SAAUF,UAAW,GAAKH,SAAU,CAAC,EAAG,EAAG,O,iBChBrD,aAAO,IAAD,EACehB,oBAAS,GADxB,mBACZC,EADY,KACDC,EADC,OAEUE,YAAQmB,KAAS,GAAtCC,EAFW,EAEXA,MAAOC,EAFI,EAEJA,UACTC,EAAanB,mBAYnB,OATAoB,QAAQC,IAAI,SAAUJ,GACtBG,QAAQC,IAAI,aAAcH,GAE1BjB,aAAS,WACPkB,EAAWjB,QAAQC,SAASmB,GANhB,MAM8B5B,EAAY,GAAK,GAC3DyB,EAAWjB,QAAQC,SAASC,GAPhB,MAO8BV,EAAY,GAAK,GAC3DyB,EAAWjB,QAAQC,SAASoB,GARhB,MAQ8B7B,EAAY,GAAK,MAI3D,0BACE8B,SAAUP,EAAMQ,QAAQD,SACxBE,SAAUR,EAAS,MACnBV,QAAS,kBAAMb,GAAcD,IAC7BW,IAAKc,KCRI,G,MAAA,WAgBb,OACE,kBAAC,IAAD,CAAQQ,qBAAqB,EAAOC,WAAS,GAC3C,+BAEI,kBAAC,IAAD,CACEC,WAAW,EACXC,cAAc,EACdC,YAAY,KAGf,GACA,GACA,GAEH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,mBAAoB,EAAGC,mBAAoB,GAAKC,OAAQ,OAEjE,kBAACC,EAAD,OACC,GACA,GACA,GACA,GACA,EAEC,kBAAC,WAAD,CAAUC,SAAU,MACT,kBAACX,EAAD,MACA,kBAACY,EAAD,QAGZ,KC3DPC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b5724d77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/glTF.ce019e05.glb\";","module.exports = __webpack_public_path__ + \"static/media/suzanne.fdd60495.glb\";","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport logo from \"./glTF.glb\";\r\n\r\nexport default () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltf = useGLTF(logo, true);\r\n  const logoRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    // logoRef.current.rotation.x += speed * (clockwise ? 1 : -1);\r\n    logoRef.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n    // logoRef.current.rotation.z += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <primitive\r\n      ref={logoRef}\r\n      object={gltf.scene}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      position={[0, 0, 0]}\r\n    />\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nexport default () => {\r\n  const lightRef = useRef();\r\n  const pos = [0.5, 0.5, 1];\r\n\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <group position={pos}>\r\n        <directionalLight\r\n          castShadow={true}\r\n          color={0xffffff}\r\n          intensity={1}\r\n          ref={lightRef}\r\n        />\r\n        <mesh position={pos}>\r\n          <sphereBufferGeometry args={[0.01, 32, 32]} />\r\n          <meshMatcapMaterial />\r\n        </mesh>\r\n      </group>\r\n\r\n      <pointLight color={0xff6600} intensity={0.5} position={[0, 0, 0]} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanne from \"./suzanne.glb\";\r\n\r\nexport default () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n  const { nodes, materials } = useGLTF(suzanne, true);\r\n  const suzanneRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  console.log(\"nodes:\", nodes);\r\n  console.log(\"materials:\", materials);\r\n\r\n  useFrame(() => {\r\n    suzanneRef.current.rotation.x += speed * (clockwise ? 1 : -1);\r\n    suzanneRef.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n    suzanneRef.current.rotation.z += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <mesh\r\n      geometry={nodes.Suzanne.geometry}\r\n      material={materials[\"Paars\"]}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      ref={suzanneRef}\r\n    />\r\n  );\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { OrbitControls, Stats } from \"@react-three/drei\";\r\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\n// import io from \"socket.io-client\";\r\nimport {\r\n  Button,\r\n  Clock,\r\n  Cube,\r\n  Gauge,\r\n  GlTransmissionFormat,\r\n  Lighting,\r\n  Suzanne,\r\n  Tripod,\r\n} from \"App/components\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default () => {\r\n  // const port = 3001;\r\n  // const socket = io(`http://localhost:${port}`);\r\n\r\n  // socket.on(\"connect\", () => {\r\n  //   console.log(\"Socket connected: \", socket.connected);\r\n  // });\r\n\r\n  // socket.on(\"disconnect\", () => {\r\n  //   console.log(\"Socket connected: \", socket.connected);\r\n  // });\r\n\r\n  // socket.on(\"telemetry\", (message) => {\r\n  //   console.log(\"Message:\", message);\r\n  // });\r\n\r\n  return (\r\n    <Canvas invalidateFrameloop={false} shadowMap>\r\n      <group>\r\n        {true && (\r\n          <OrbitControls\r\n            enablePan={true}\r\n            enableRotate={true}\r\n            enableZoom={true}\r\n          />\r\n        )}\r\n        {false && <Stats />}\r\n        {false && <axesHelper />}\r\n        {false && <gridHelper args={[10, 10, \"red\", \"green\"]} />}\r\n      </group>\r\n      <EffectComposer>\r\n        <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\r\n      </EffectComposer>\r\n      <Lighting />\r\n      {false && <Button />}\r\n      {false && <Clock />}\r\n      {false && <Cube />}\r\n      {false && <Cube position={[1, 1, 1]} rotation={[0.5, 0.5, 0.5]} />}\r\n      {false && <Gauge position={[0, 0, -1]} />}\r\n      {true && (\r\n        <Suspense fallback={null}>\r\n          {true && <Suzanne />}\r\n          {true && <GlTransmissionFormat />}\r\n        </Suspense>\r\n      )}\r\n      {false && <Tripod />}\r\n    </Canvas>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}