{"version":3,"sources":["App/components/GlTransmissionFormat/glTF.glb","App/components/Button/Spring.js","App/index.js","index.js","App/components/Suzanne/suzanne.glb"],"names":["module","exports","props","useState","hover","setHover","toggle","setToggle","colorCurrent","setColorCurrent","useSpring","opacity","scale","rotation","THREE","degToRad","useFrame","group","onClick","onDoubleClick","onPointerOut","onPointerOver","mesh","args","meshMatcapMaterial","color","transparent","fontSize","position","invalidateFrameloop","shadowMap","enablePan","enableRotate","enableZoom","title","ReactDOM","render","App","document","getElementById"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,kC,sLCM5B,WAACC,GAAW,IAAD,EACEC,oBAAS,GADX,mBACjBC,EADiB,KACVC,EADU,OAEIF,oBAAS,GAFb,mBAEjBG,EAFiB,KAETC,EAFS,OAGgBJ,mBAAS,UAHzB,mBAGjBK,EAHiB,KAGHC,EAHG,OAIaC,YAAU,CAC7CC,QAASP,EAAQ,EAAI,GACrBQ,MAAOR,EAAQ,CAAC,IAAK,MAAQ,CAAC,EAAG,GACjCS,SAAUP,EAAS,CAACQ,YAAgBC,UAAU,IAAK,EAAG,GAAK,CAAC,EAAG,EAAG,KAH5DJ,EAJgB,EAIhBA,QAASE,EAJO,EAIPA,SAAUD,EAJH,EAIGA,MAQ3B,OAFAI,aAAS,eAGP,kBAAC,IAASC,MAAV,CACEC,QAAS,kBAAMX,GAAWD,IAC1Ba,cAAe,kBAAMV,EAAgBD,GAAgB,IACrDY,aAAc,kBAAMf,GAAS,IAC7BgB,cAAe,kBAAMhB,GAAS,IAC9BQ,SAAUA,GAEV,kBAAC,IAASS,KAAV,CAAeV,MAAOA,GACpB,yCAAqBW,KAAM,CAAC,EAAG,MAC/B,kBAAC,IAASC,mBAAV,CACEb,QAASA,EACTc,MAAOjB,EACPkB,aAAa,KAGjB,kBAAC,IAAD,CAAMD,MAAM,QAAQE,SAAU,GAAKC,SAAU,CAAC,EAAG,EAAG,MAApD,eCVS,G,8BAAA,WAgBb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,qBAAqB,EAAOC,WAAS,GAC3C,+BAEI,kBAAC,IAAD,CACEC,WAAW,EACXC,cAAc,EACdC,YAAY,IAGP,kBAAC,IAAD,MACA,qCACA,uCAEV,GASA,GACA,GACA,GACA,EACQ,kBAAC,EAAD,OACR,GACA,GACA,GACA,GACA,GAQA,GAEH,kBAAC,IAAD,CAAUC,MAAM,gBC/EtBC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDvC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.1fb0795b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/glTF.ce019e05.glb\";","import React, { useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { animated, useSpring } from \"react-spring/three\";\r\nimport { Box, Text } from \"@react-three/drei\";\r\n\r\nexport default (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [colorCurrent, setColorCurrent] = useState(0xff0000);\r\n  const { opacity, rotation, scale } = useSpring({\r\n    opacity: hover ? 1 : 0.5,\r\n    scale: hover ? [1.5, 1.25] : [1, 1],\r\n    rotation: toggle ? [THREE.MathUtils.degToRad(-90), 0, 0] : [0, 0, 0],\r\n  });\r\n\r\n  useFrame(() => {});\r\n\r\n  return (\r\n    <animated.group\r\n      onClick={() => setToggle(!toggle)}\r\n      onDoubleClick={() => setColorCurrent(colorCurrent >> 8)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      rotation={rotation}\r\n    >\r\n      <animated.mesh scale={scale}>\r\n        <planeBufferGeometry args={[1, 0.5]} />\r\n        <animated.meshMatcapMaterial\r\n          opacity={opacity}\r\n          color={colorCurrent}\r\n          transparent={true}\r\n        />\r\n      </animated.mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </animated.group>\r\n  );\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { Controls, ControlsProvider } from \"react-three-gui\";\r\nimport { OrbitControls, Stats } from \"@react-three/drei\";\r\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\n// import io from \"socket.io-client\";\r\nimport {\r\n  Button,\r\n  ButtonSpring,\r\n  Clock,\r\n  Cube,\r\n  Gauge,\r\n  GlTransmissionFormat,\r\n  Lighting,\r\n  LightingStudio,\r\n  LightingStudioGui,\r\n  Suzanne,\r\n  SuzanneMatcap,\r\n  SuzanneStandard,\r\n  Tripod,\r\n} from \"App/components\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default () => {\r\n  // const port = 3001;\r\n  // const socket = io(`http://localhost:${port}`);\r\n\r\n  // socket.on(\"connect\", () => {\r\n  //   console.log(\"Socket connected: \", socket.connected);\r\n  // });\r\n\r\n  // socket.on(\"disconnect\", () => {\r\n  //   console.log(\"Socket connected: \", socket.connected);\r\n  // });\r\n\r\n  // socket.on(\"telemetry\", (message) => {\r\n  //   console.log(\"Message:\", message);\r\n  // });\r\n\r\n  return (\r\n    <ControlsProvider>\r\n      <Canvas invalidateFrameloop={false} shadowMap>\r\n        <group>\r\n          {true && (\r\n            <OrbitControls\r\n              enablePan={true}\r\n              enableRotate={true}\r\n              enableZoom={true}\r\n            />\r\n          )}\r\n          {true && <Stats />}\r\n          {true && <axesHelper />}\r\n          {true && <gridHelper />}\r\n        </group>\r\n        {false && (\r\n          <EffectComposer>\r\n            <Bloom\r\n              height={500}\r\n              luminanceThreshold={0}\r\n              luminanceSmoothing={0.9}\r\n            />\r\n          </EffectComposer>\r\n        )}\r\n        {false && <Lighting />}\r\n        {false && <LightingStudio />}\r\n        {false && <LightingStudioGui />}\r\n        {false && <Button />}\r\n        {true && <ButtonSpring />}\r\n        {false && <Clock />}\r\n        {false && <Cube />}\r\n        {false && <Cube position={[1, 1, 1]} rotation={[0.5, 0.5, 0.5]} />}\r\n        {false && <Gauge />}\r\n        {false && (\r\n          <Suspense fallback={null}>\r\n            {false && <GlTransmissionFormat />}\r\n            {false && <Suzanne />}\r\n            {false && <SuzanneMatcap />}\r\n            {true && <SuzanneStandard />}\r\n          </Suspense>\r\n        )}\r\n        {false && <Tripod />}\r\n      </Canvas>\r\n      <Controls title=\"Controls\" />\r\n    </ControlsProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/suzanne.fdd60495.glb\";"],"sourceRoot":""}